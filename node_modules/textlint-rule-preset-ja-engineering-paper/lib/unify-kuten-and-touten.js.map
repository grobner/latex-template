{"version":3,"sources":["../src/unify-kuten-and-touten.js"],"names":["rx","defaultOpts","kuten","touten","possibleMarks","leftTarget","mark","japaneseRegExp","rightTarget","reporter","context","options","Syntax","RuleError","report","fixer","getSource","opts","Object","assign","allKuten","allTouten","ngMarks","filter","x","Str","node","text","matches","leftMatches","rightMatches","forEach","match","symbol","indexOf","indexOfSymbol","index","fix","replaceTextRange","module","exports","linter"],"mappings":"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","sourcesContent":["// unify-kuten-and-touten.js\n//   from textlint-rule-preset-JTF-style/src/1.2.1.js\n//   Copyright (c) 2015 azu\n//   LICENSE : MIT\n//   https://github.com/textlint-ja/textlint-rule-preset-JTF-style/blob/master/LICENSE\n'use strict';\nimport regx from 'regx';\nimport { isUserWrittenNode } from './util/node-util';\nimport { japaneseRegExp } from './util/regexp';\nimport { matchCaptureGroupAll } from 'match-index';\nimport mergeMatches from './util/merge-matches';\nconst rx = regx('g');\n/*\n# unify-kuten-and-touten\n\n- （「preset-jtf-style/1.2.1. 句点(。)と読点(、)」の改変ルール）\n- 工学系の論文などを対象に、句読点を統一します。\n- デフォルトは日本機械学会論文集が指定している「．」（全角ピリオド）と「，」（全角カンマ）です。\n    - これらはoptionで変更できます。\n- 仕様上、preset-jtf-style/1.2.1.句点(。)と読点(、)・同1.2.2・同4.1.3と矛盾する場合があります。\n    - これらのルールを使用している場合は、オプションで無効化してください。\n\n- TODO: 英語のアブストラクトのみ半角記号を使う場合など\n */\n\nconst defaultOpts = {\n    kuten  : '．', // 指定したい句点\n    touten : '，', // 指定したい読点\n    possibleMarks : {   // 入力されうる句読点として認識させたい記号\n        kuten  : ['。', '.', '．'],\n        touten : ['、', ',', '，'],\n    }\n};\n\n// [{句点 or 読点}]{日本語}\nconst leftTarget = mark => rx`(${mark === '.' ? '\\\\.' : mark})${japaneseRegExp}`;\n// {日本語}[{句点 or 読点}]\nconst rightTarget = mark => rx`${japaneseRegExp}(${mark === '.' ? '\\\\.' : mark})`;\n\nconst reporter = (context, options = {}) => {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    // apply user options\n    const opts = Object.assign({}, defaultOpts, options);\n    const allKuten = [\n        ...defaultOpts.possibleMarks.kuten,\n        ...(options.possibleMarks ? (options.possibleMarks.kuten || []) : [])\n    ];\n    const allTouten = [\n        ...defaultOpts.possibleMarks.touten,\n        ...(options.possibleMarks ? (options.possibleMarks.touten || []) : [])\n    ];\n    // generate disallowed marks' list\n    const ngMarks = [\n        ...allKuten.filter(x => x !== opts.kuten),\n        ...allTouten.filter(x => x !== opts.touten)\n    ];\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            let matches = [];\n            for(const mark of ngMarks) {\n                const leftMatches = matchCaptureGroupAll(text, leftTarget(mark));\n                const rightMatches = matchCaptureGroupAll(text, rightTarget(mark));\n                matches = [...matches, ...mergeMatches(leftMatches, rightMatches)];\n            }\n            matches.forEach(match => {\n                let symbol = '';\n                if(allKuten.indexOf(match.text) !== -1) symbol = opts.kuten;\n                else if(allTouten.indexOf(match.text) !== -1) symbol = opts.touten;\n                const indexOfSymbol = match.index;\n                report(\n                    node,\n                    new RuleError(`句読点には「${opts.touten}」と「${opts.kuten}」を使用してください${opts.kuten}`, {\n                        index: indexOfSymbol,\n                        fix: fixer.replaceTextRange([indexOfSymbol, indexOfSymbol + 1], symbol)\n                    })\n                );\n            });\n        }\n    };\n};\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"],"file":"unify-kuten-and-touten.js"}